Плюсы чистого кода
1) скорость чтения
2) быстро исправляется 
3) менее дорогой, проще поддерживать 
4) менее сложный 
5) меньше дефектов
6) выглядит профессионально 
Поддержка чистого кода
1)сделать это целью команды 
2) регулярно 
3) стандарты
4) практика ( парное программирование) 
5) инструменты ( вносить комментарии, автоматическое выявление ошибок) 

Code convention
Начать с его соблюдения 

Правильные названия переменных 
- Не сокращать
- без цифр
- не буквой
Рекомендации названия переменных
- convention 
- понятные имена 
- одна буква только i и j в for для циклов 
- без цифр
- избегать венгерской нотации (для старых языков был создан) 
- не исп абревиатуру 
-не однобуквенные 
- не сокращать
- без общих понятий 
-хорошее название - длинное, чтобы по названию было понятно 

Имена классов 
- существительное 
- много назначений это плохо
- не абревеатурой 
- без цифр
- не myClass
Функции и методы 
- глагол
- длинные имена, читабельно 
- не делать 2 разных действия в одном методе ( 1 метод - 1 действие) 
- без общего 
- соответствие с типом ( string print() -) 
- если много параметров, то лучше заменить на патерн билдер или объект агрегирующий 

Комментарии 
- лицензия
- сложные коменты для 
- причина выбора метода 
- каждую строку // , для гита не отслеж /**/
- не бональные , не очевидные 
- без счëтчиков 
- не коммитить код 

Избыточный код 
- можно уменьшить кол-во строк
- сразу возвращать без переменных
- тернарный оператор
- не исп system.out, никто не читает консоль
- лишние переменные , лишнее сравнение 
- инверсия обозначать знаком ! 

Исключения
- сохранять запротоколировать непредвиденные ситуации (не выбрасывать) 
- надо использовать вместо null, -1
- соответствие, понятное названию 

Тесты
- должен быть американский
- чëткая причина падения, (10 фичей - 10 тестов ) 
- before/after 
- самостоятельные, без определëнного порядка 
- линейная логика, без for, switch, try, 
( тесты не для программистов, но знают англ) 
-  не называть тестовыми данными, данные отдельно от названий
- filt pass плохо 
- тесты в main плохо , должны находится в методах 
- не передавать в тест параметры 
- не нумеровать 
- не скрывать негативные 

Дизайн принципы 
1) kiss (делай просто, если это можно, меньше строк, меньше кода) 
2) dry ( не повторяйся, если есть, то вынести отдельно (использовать метод) 
- не делать слепого копирования, копировать то, что надо
- сразу разделять на классы, не писать в main
- переделаю потом (не делать так) 

Инструменты поддержки качества кода 
- code convention ( чтоб не объяснять каждому, общий закон) 
- code review светятся (парное программирование, исп после коммита, предложить почитать код кому-то
- статические анализаторы кода (разбиение кола на куски; дешевле, чем будет смотреть человек) 

Личность программиста 
- инженер, а не кодер (решается инженерная задача, а не код ради кода, это только инструмент) 
- читать профессиональные блог на и книги, не только видео
- разговаривать с опытными людьми (разговор больше инфы) 
- воспринимать критику
- дисциплина ( не гнаться за скоростью, главное качество, convention) 

Рекомендации
- грамотный код
- именования, лучше читаемость
- коменты по необходимости 
- снизить сложность, много ошибок будет, без дубликатов, исключения, инструменты
- быть инженером, а не кодером 
	
читать
-Роберт Мартин чистый код
-Code completed

-solid
-law of Demeter
-multi-thrreading
-refactoring
-loC
-design patterns
-anti-patterns
- читать книги